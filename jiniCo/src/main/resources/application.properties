server.port=8080
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

# [ H2 설정 ]
spring.h2.console.enabled=true

# H2로 접속할 수 있는 url
##spring.datasource.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false
spring.datasource.url=jdbc:h2:tcp://localhost/~/test
# spring.datasource.* : 사용자, 비밀번호, 드라이버 정보
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=jini
spring.datasource.password=jini

# [ JPA 설정 ]
#hibernate초기화 전략 : 기본값은 "none" (자동생성 하지 않음)
spring.jpa.hibernate.ddl-auto=none
# true로 설정 시, @Entity이 명시된 클래스를 찾아서 ddl을 생성하고 실행
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
spring.jpa.database=h2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.defer-datasource-initialization=true
# 압축된 쿼리를 읽기 좋게 포멧
spring.jpa.properties.hibernate.format_sql=true

# [ logging ]
# 전체 로그 레벨 설정
logging.level.root=info
# 로그형식으로 쿼리 보여주기
logging.level.org.hibernate.sql=debug
logging.level.jpa=debug
logging.level.org.springframework.transaction=trace
logging.level.org.hibernate.type.descriptor.spi=trace

# [ JWT ]
jwt.secretKey=jini'sSecretKey
jwt.expire.minute=30